CREATE TABLE menu_item
(
    id          BIGINT PRIMARY KEY,
    name        VARCHAR(255)   NOT NULL,
    description VARCHAR(255),
    price       DECIMAL(10, 2) NOT NULL,
    quantity    INT            NOT NULL,
    type        VARCHAR(50)    NOT NULL
);

CREATE TABLE menu
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255)
);

-- Зв'язуюча таблиця для Menu та MenuItem (Many-to-Many відношення, оскільки Set<MenuItem> в Menu)
-- Або, якщо MenuItem є частиною Menu, то це One-to-Many з Foreign Key в MenuItem
-- Виходячи з @OneToMany в Menu та відсутності ManyToOne в MenuItem,
-- це виглядає як One-to-Many з Foreign Key в menu_item таблиці.
ALTER TABLE menu_item
    ADD COLUMN menu_id BIGINT,
ADD CONSTRAINT fk_menu_item_menu
FOREIGN KEY (menu_id) REFERENCES menu(id);


-- Таблиця для Order
-- order_id використовує UUID, тому тип даних має бути VARCHAR або BINARY(16) в залежності від СУБД
-- Статус та PaymentMethod будуть зберігатися як рядки (ENUM в Java)
CREATE TABLE customer_order
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- @Id, @GeneratedValue(strategy = GenerationType.SEQUENCE)
    order_id        UUID UNIQUE                          NOT NULL,       -- @NaturalId, @GeneratedValue(strategy = GenerationType.UUID)
    delivery_street VARCHAR(255)                         NOT NULL,
    delivery_city   VARCHAR(255)                         NOT NULL,
    delivery_state  VARCHAR(255)                         NOT NULL,
    delivery_zip    VARCHAR(255)                         NOT NULL,
    status          VARCHAR(50)    DEFAULT 'IN_PROGRESS' NOT NULL,       -- Припускаємо, що Status зберігається як рядок
    customer_name   VARCHAR(255),
    total_price     DECIMAL(10, 2) DEFAULT 0.00          NOT NULL,
    payment_method  VARCHAR(50)                          NOT NULL        -- Припускаємо, що PaymentMethod зберігається як рядок
);

-- Зв'язуюча таблиця для Order та MenuItem (Many-to-Many, оскільки Set<MenuItem> в Order)
CREATE TABLE order_menu_item
(
    order_id     BIGINT NOT NULL,
    menu_item_id BIGINT NOT NULL,
    PRIMARY KEY (order_id, menu_item_id),
    FOREIGN KEY (order_id) REFERENCES customer_order (id),
    FOREIGN KEY (menu_item_id) REFERENCES menu_item (id)
);